<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	

	<!-- 1.定义SqlSessionFactoryBean
		配置步骤：
			a.添加数据源
			b.加载Mybatis核心配置文件
			c.添加映射文件
			d.配置别名包
	 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 添加数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 添加Mybatis核心配置文件 -->
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"></property>
		<!-- 添加映射文件 -->
		<property name="mapperLocations" value="classpath:/mybatis/mappers/*.xml"></property>
		<!-- 配置别名包 -->
		<property name="typeAliasesPackage" value="com.bjbj.manage.pojo"></property>
	</bean>
	
	<!-- 2.为Mapper接口生成代理对象
		作用：
			a.basePackage 会根据配置的包路径去扫描所有Mapper接口文件，并且为其创建代理对象(JDK代理) 交给spring容器管理
	 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 定义接口的包路径 -->
		<property name="basePackage" value="com.bjbj.manage.mapper"></property>
	</bean>

	
</beans>